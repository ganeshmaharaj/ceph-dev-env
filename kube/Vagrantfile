# This is a simple vagrant file for ceph VM where the system is behind a proxy.
# Author: Ganesh Maharaj Mahalingam

# Specify the server until vagrant gets updated to later version.
Vagrant::DEFAULT_SERVER_URL.replace('https://vagrantcloud.com')
require 'ipaddr'
base_ip = IPAddr.new(ENV['IP'] || "172.16.0.100")
hosts = {
	'cephvm' => base_ip.to_s
}

extra_vms = Integer(ENV['EXTRA_VMS'] || 0)
(1..extra_vms).each do |i|
  base_ip = base_ip.succ
  hosts["cephvm#{i}"] = base_ip.to_s
end

proxy_ip_list = ""
# Start the vagrant box with some configs
Vagrant.configure("2") do |config|
  if ENV['HTTP_PROXY'] || ENV['http_proxy']
    system "vagrant plugin install vagrant-proxyconf" unless Vagrant.has_plugin?("vagrant-proxyconf")
  end
  # Enable caching to speed up package installation on second run
  # vagrant-cachier
  system "vagrant plugin install vagrant-cachier" unless Vagrant.has_plugin?("vagrant-cachier")
  config.vm.box = "centos/7"
  config.cache.scope = :box
  # Need this for libvirt to be able to mount cache folders properly.
  config.cache.synced_folder_opts = {
    type: :nfs,
    mount_options: ['rw', 'vers=3', 'tcp', 'nolock']
  }

  # Create all no_proxy IP list
  hosts.each do|vm_name, ip|
    proxy_ip_list = ("#{proxy_ip_list},#{ip}")
  end
  hosts.each do|vm_name, ip|
    config.vm.define vm_name do |cephvm|
      cephvm.vm.hostname = vm_name
        if Vagrant.has_plugin?("vagrant-proxyconf")
          cephvm.proxy.http = (ENV['HTTP_PROXY'] || ENV['http_proxy'])
          cephvm.proxy.https = (ENV['HTTPS_PROXY'] || ENV['https_proxy'])
          nproxy = (ENV['NO_PROXY'] || ENV['no_proxy'])
          cephvm.proxy.no_proxy = ("#{nproxy},#{vm_name},#{proxy_ip_list}" || 'localhost,127.0.0.1,#{vm_name},#{proxy_ip_list}')
        end
      cephvm.vm.network :private_network, ip: ip, libvirt__network_name: "cephvm-net"
    # Setup port forwarding in case you wish to see horizon
      cephvm.vm.provider :libvirt do |lv|
        lv.cpus = Integer(ENV['VAGRANT_CPUS'] || 2)
        lv.memory = Integer(ENV['VAGRANT_MEM'] || 2048)
        disk_id = `uuidgen`.chomp
        lv.storage :file, :device => "hdb", :path => "disk-1-b-#{vm_name}.disk", :size => "10G", :allow_existing => false
      end
    end
  end
end
